#
# wm independent hotkeys
#

# Show sxhkd help
super + slash
	sxhkd-help.sh

# make sxhkd reload its configuration files:
super + shift + r
	noti -m "sxhkd reloaded" -t "sxhkd" pkill -USR1 -x sxhkd 

# Toggle languages
super + shift + n
	xkb-switch -n

# terminal emulator
# Checks if currently focused monitor is 1080p, and if so 
# decreases font size to 10.0
super + Return
	MIN_DIM=$(bspc wm -d |\
        jq -r ".monitors[]"\
        "| select(.name == \"$(bspc query --names -M -m)\") "\
        "| .rectangle | [.width, .height] | min") \
    [ $MIN_DIM -eq 1080 ] && kitty -o font_size=9.0 || kitty

super + shift + Return
	kitty nvim

# program launcher
super + @space
    rofi -m "-1" -show run

# # # # # Screen brightness # # # # #
super + {Left, Right}
	xbacklight {-dec,-inc} 5

super + shift + {Left, Right}
	xbacklight {-dec,-inc} 1

super + shift + alt + {Left, Right}
	xbacklight -set {0.3, 100}

super + shift + alt + {Up, Down}
	redshift {-x, -P -O 1300}

# # # # # # # Volume # # # # # # # #
# Mute
@F1
	amixer set Master toggle
super + {Up, Down}
	pactl set-sink-volume @DEFAULT_SINK@ {+,-}5%

# # # # # # Screenshots # # # # # # 
Print
	maim -u -s --format png | xclip -sel clip -t image/png

shift + Print
	maim -u -s --format png ~/(date +%s).png

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + shift + {d, q}
	bspc node -{c,k}

super + r
	bspc node @/ -R 90

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

super + shift + {h,j,k,l}
	bspc node -s {west,south,north,east} --follow

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the occupied next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.occupied

# send window to the next/previous desktop in the current monitor
super + brace{left,right}
	bspc node -d {prev,next}.occupied --follow

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# open up todo.org in next unoccupied desktop
super + o
	bspc desktop -f next.!occupied; \
    emacs ~/org/todo.org

# focus the older or newer node in the focus history
# super + {o,i}
# 	bspc wm -h off; \
# 	bspc node {older,newer} -f; \
# 	bspc wm -h on

# focus or send to the given desktop
super + {1-5}; super + {1-5}
	bspc desktop -f '{A,B,C,D,E}{1-5}'

super + shift + {1-5}; super + shift + {1-5}
	bspc node -d '{A,B,C,D,E}{1-5}' --follow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
# super + ctrl + {1-9}
	# bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	#bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# move current window to a pre-selected space
super + shift + m
	bspc node -n last.!automatic

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

